[build]
builder = "NIXPACKS"

[deploy]
healthcheckPath = "/"
healthcheckTimeout = 100
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 10

# PostgreSQL Database Service
[[services]]
name = "postgres-db"
source = "postgresql"

[services.variables]
POSTGRES_USER = "opa_user"
POSTGRES_PASSWORD = "${{ railway.database.password }}"
POSTGRES_DB = "opa_zero_poll"

# Redis Service for OPAL communication
[[services]]
name = "redis-broadcast"
source = "redis"

[services.variables]
REDIS_PORT = "6379"

# Data Provider API Service
[[services]]
name = "data-provider-api"
source = "new-architecture/components/data-provider-api"

[services.variables]
PORT = "8110"
DEBUG = "false"
WEBHOOK_SECRET = "railway_super_secret_key_2025"
DISABLE_JWT_VALIDATION = "true"
# Database connection
DB_HOST = "${{ services.postgres-db.host }}"
DB_PORT = "5432"
DB_USER = "opa_user"
DB_PASSWORD = "${{ services.postgres-db.POSTGRES_PASSWORD }}"
DB_NAME = "opa_zero_poll"
# OPA and Provisioning API URLs
OPA_URL = "http://${{ services.opa-standalone.host }}:8181"
PROVISIONING_API_URL = "http://${{ services.provisioning-api.host }}:8010"

[services.healthcheck]
path = "/health"
timeout = 30

# Provisioning API Service
[[services]]
name = "provisioning-api"
source = "new-architecture/components/provisioning-api"

[services.variables]
PORT = "8010"
DEBUG = "false"
# Database connection
DB_HOST = "${{ services.postgres-db.host }}"
DB_PORT = "5432"
DB_USER = "opa_user"
DB_PASSWORD = "${{ services.postgres-db.POSTGRES_PASSWORD }}"
DB_NAME = "opa_zero_poll"
# OPAL integration
OPAL_SERVER_URL = "http://${{ services.opal-server.host }}:7002"
DATA_PROVIDER_API_URL = "http://${{ services.data-provider-api.host }}:8110"

[services.healthcheck]
path = "/health"
timeout = 30

# OPA Standalone Service
[[services]]
name = "opa-standalone"
source = "new-architecture/components/opa-standalone"

[services.variables]
OPA_LOG_LEVEL = "info"

[services.healthcheck]
path = "/health"
timeout = 30

# OPAL Server Service - using Docker image
[[services]]
name = "opal-server"

[services.image]
name = "permitio/opal-server"
tag = "latest"

[services.variables]
# Broadcast channel (Redis)
OPAL_BROADCAST_URI = "redis://${{ services.redis-broadcast.host }}:6379"
# GitHub Policy Repository
OPAL_POLICY_REPO_URL = "https://github.com/plduser/opa-zero-poll.git"
OPAL_POLICY_REPO_MAIN_BRANCH = "main"
OPAL_POLICY_REPO_PATH = "new-architecture/components/opa-standalone/policies"
OPAL_POLICY_REPO_POLLING_INTERVAL = "30"
# Data Configuration
OPAL_DATA_CONFIG_ENABLED = "true"
OPAL_ALL_DATA_URL = "http://${{ services.data-provider-api.host }}:8110/opal/full-snapshot"
OPAL_LOG_LEVEL = "DEBUG"

[services.healthcheck]
path = "/healthcheck"
timeout = 30

# OPAL Client Service - using Docker image
[[services]]
name = "opal-client"

[services.image]
name = "permitio/opal-client"
tag = "latest"

[services.variables]
# OPAL Server connection
OPAL_SERVER_URL = "http://${{ services.opal-server.host }}:7002"
OPAL_FETCH_PROVIDER_ENABLED = "true"
OPAL_INLINE_OPA_ENABLED = "false"
# Broadcast channel (Redis)
OPAL_BROADCAST_URI = "redis://${{ services.redis-broadcast.host }}:6379"
# OPA connection
OPAL_POLICY_STORE_URL = "http://${{ services.opa-standalone.host }}:8181"
# Policy subscription
OPAL_POLICY_SUBSCRIPTION_DIRS = "new-architecture/components/opa-standalone/policies"
# Data configuration
OPAL_DATA_UPDATER_ENABLED = "true"
OPAL_DATA_TOPICS = "multi_tenant_data"
OPAL_DATA_CONFIG_SOURCES = "http://${{ services.data-provider-api.host }}:8110/data/config"
OPAL_POLICY_UPDATER_ENABLED = "true"
OPAL_LOG_LEVEL = "DEBUG"

# Next.js Frontend Service
[[services]]
name = "frontend"
source = "."

[services.variables]
# Fixed: Add https:// protocol and use correct internal URL
DATA_PROVIDER_API_URL = "https://opa-zero-poll-production-1934.up.railway.app"

[services.healthcheck]
path = "/"
timeout = 120 